{% extends "base.html.twig" %}

{% block title %}Card Game{% endblock %}

{% block body %}
<h1>Card game</h1>

{{ include('general/flash.html.twig') }}

<p>This is a card game.</p>

<p><a href="{{ path('card_deck') }}">Show Deck of Cards</a></p>
<p><a href="{{ path('card_deck_shuffle') }}">Shuffle Deck of Cards</a></p>
<p><a href="{{ path('card_draw') }}">Draw 1 card</a></p>
{# <form method="get" action="{{ path('card_draw_num') }}"> #}
<form method="get" action="{{ path('card_draw') }}">
    <input type="number" name="num_cards" min="1" max="52" value="1" size="5">
    <input type="submit" name="do_it" value="Draw cards"
        onClick="this.form.action='{{ path('card_draw') }}' + '/' + this.form.num_cards.value; this.form.method='get';"
    >
</form>
<form method="get" action="{{ path('card_deal') }}">
    Players: <input type="number" name="num_players" min="1" max="10" value="1" size="5">
    Cards: <input type="number" name="num_cards" min="1" max="52" value="1" size="5">
    <input type="submit" name="do_it" value="Deal cards"
        onClick="this.form.action='{{ path('card_deal') }}' + '/' + this.form.num_players.value +
            '/' + this.form.num_cards.value ; this.form.method='get';"
    >
</form>

<h2>Om klasserna</h2>
<p>Grunden är en Card-klass som innehåller grunderna till ett spelkort och textbaserade representationer av dessa. Det
    finns interna metoder som visar kortet, men den publika metoden är showCard (som är samma som i CardGraphic). Till
    showCard skulle jag kunnat gjort ett interface, men har inte gjort det (ännu). Man anger färg och värde när man skapar
    kortet i constructorn.
</p>
<p>CardGraphic är en ärvd klass till Card. Den utökar med grafisk representation av kortet med hjälp av svg-bilder. Som
    redan nämts används showCard för att visa, och den returnerar alltid (dvs från båda klasserna) en array med 2 värden;
    en textrepresentation och en grafisk representation (som är tom om original Card). Utdatafunktionerna kollar om
    det finns en grafisk representation eller inte, och visar kortet därefter.
</p>
<p>DeckOfCard är kortleksklassen. När den skapas skapas 52 kort upp. Den har metoder för att blanda, visa upp sig, 
    ge kort (antal kort samt bool om man ska returnera grafiskt eller som objekt) samt metod för att se hur många kort som är kvar.
</p>
<p>CardHand representerar en korthand eller en spelare om man så vill. Den skapas med ett namn, och sedan kan man lägga
    till kort (ett i taget). Man kan visa upp handen och se hur många kort den har.
</p>
<p>Jag har kommit fram till att både DeckOfCard och CardHand är aggregrationer av Card/CardGraphic. Båda kan verka utan
    att innehålla kort. Dock måste DeckOfCard skapas med kort i sig, så det är ett gränsfall och skulle kunna vara komposition
    istället. </p>
<figure>
    <img src="{{ asset('img/uml.png') }}" alt="klassdiagram">
    <figcaption class="figcaption">Klassdiagram skapat i draw.io</figcaption>
</figure>

{% endblock %}